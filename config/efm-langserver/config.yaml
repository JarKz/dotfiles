---
version: 2

# linter,formatter setting
tools:
  google-java-format: &google-java-format
    format-command: "google-java-format -"
    format-stdin: true

  cppcheck-lint: &cppcheck-lint
    lint-command: "cppcheck --enable=style --error-exitcode=1 ${INPUT}"
    lint-stdin: false
    lint-formats:
      - "%f:%l:%c: %m"

  vale-lint: &vale-lint
    lint-command: "vale --relative --output line ${INPUT}"
    lint-stdin: false
    lint-ignore-exit-code: true
    lint-formats:
      - "%f:%l:%c:%*[^:]:%m"

  markdownlint-lint: &markdownlint-lint
    lint-command: "markdownlint --stdin"
    lint-stdin: true
    lint-formats:
      - "%f:%l %m"
      - "%f: %l: %m"

  jsonlint-lint: &jsonlint-lint
    lint-command: "jsonlint -c"
    lint-stdin: true
    lint-formats:
      - "line %l, col %c, found: %m"

  jq-format: &jq-format
    format-command: "jq ."
    format-stdin: true

  fixjson-format: &fixjson-format
    format-command: "fixjson"
    format-stdin: true

  shellcheck-lint: &shellcheck-lint
    lint-command: "shellcheck -s bash -f gcc -x -"
    lint-stdin: true
    lint-formats:
      - "%f:%l:%c: %trror: %m"
      - "%f:%l:%c: %tarning: %m"
      - "%f:%l:%c: %tote: %m"

  shfmt-format: &shfmt-format
    format-command: "shfmt -ln bash -i 2 -bn -ci -sr -kp"
    format-stdin: true

  yamllint-lint: &yamllint-lint
    lint-command: "yamllint --strict --format parsable ${INPUT}"
    lint-ignore-exit-code: true
    lint-stdin: false
    lint-formats:
      - "%f:%l:%c: [%trror] %m"
      - "%f:%l:%c: [%tarning] %m"
    env:
      - "PYTHONIOENCODING=UTF-8"
  prettier: &prettier
    format-command: "prettier --stdin --stdin-filepath ${INPUT}"
    format-stdin: true

  eslint_d-lint: &eslint_d-lint
    lint-command: "eslint_d --no-color --format visualstudio --stdin"
    lint-ignore-exit-code: true
    lint-stdin: true

  eslint_d-format: &eslint_d-format
    format-command: "eslint_d --fix-to-stdout --stdin"
    format-stdin: true

  stylelint-lint: &stylelint-lint
    lint-command: >
      "stylelint --no-color --formatter compact --stdin
      --stdin-filename ${INPUT}"
    lint-ignore-exit-code: false
    lint-stdin: true
    lint-formats:
      - "%f:%l:%c: %m [%trror]"
      - "%f:%l:%c: %m [%tarning]"

  htmlbeautifier: &htmlbeautifier
    format-command: "htmlbeautifier "
    format-stdin: true

  tidy: &tidy
    lint-command: "tidy -quiet -errors -lang en "
    lint-ignore-exit-code: false
    lint-stdin: true
    lint-formats:
      - "%f:%l:%c: %m [%trror]"
      - "%f:%l:%c: %m [%tarning]"

  tidy-xml: &tidy-xml
    lint-command: "tidy -quiet -errors -lang en -xml "
    lint-ignore-exit-code: false
    lint-stdin: true
    lint-formats:
      - "%f:%l:%c: %m [%trror]"
      - "%f:%l:%c: %m [%tarning]"

  autopep8: &autopep8
    format-command: "autopep8 -"
    format-stdin: true

# languages setting
languages:
  java:
    - <<: *google-java-format

  markdown:
    - <<: *markdownlint-lint
    - <<: *vale-lint
    - <<: *prettier

  json:
    - <<: *jsonlint-lint
    - <<: *jq-format
    - <<: *fixjson-format

  json5:
    - <<: *fixjson-format

  text:
    - <<: *vale-lint

  help:
    - <<: *vale-lint

  cpp:
    - <<: *cppcheck-lint

  c:
    - <<: *cppcheck-lint

  sh:
    - <<: *shellcheck-lint
    - <<: *shfmt-format
  bash:
    - <<: *shellcheck-lint
    - <<: *shfmt-format
  zsh:
    - <<: *shellcheck-lint
    - <<: *shfmt-format

  yaml:
    - <<: *yamllint-lint
    - <<: *prettier

  javascript:
    - <<: *eslint_d-lint
    - <<: *eslint_d-format

  typescript:
    - <<: *eslint_d-lint
    - <<: *eslint_d-format

  css:
    - <<: *stylelint-lint
    - <<: *prettier

  scss:
    - <<: *stylelint-lint
    - <<: *prettier

  sass:
    - <<: *stylelint-lint

  less:
    - <<: *stylelint-lint
    - <<: *prettier

  sugarss:
    - <<: *stylelint-lint

  html:
    - <<: *htmlbeautifier
    - <<: *tidy

  xml:
    - <<: *tidy-xml

  python:
    - <<: *autopep8
